{
  "version": "3.2",
  "log": [
    {
      "NFTMarketplaceV3": {
        "src": "contracts/NFTMarketplace_V3.sol:7",
        "version": {
          "withMetadata": "53d1604b691d0f0df7ce731305f4532e296683248a6e886f998d1766af11e800",
          "withoutMetadata": "15b783f5a162f8190b93ff4b6b9d66f95f7d4c7f98dd1d6f65c2f383bdd7ef3c",
          "linkedWithoutMetadata": "15b783f5a162f8190b93ff4b6b9d66f95f7d4c7f98dd1d6f65c2f383bdd7ef3c"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "initializer()",
          "getCounterOrder()",
          "createOrder(address,uint256,address,uint256)",
          "matchOrder(uint256)",
          "cancelOrder(uint256)",
          "addTreasury(address)",
          "getTreasury()",
          "setFee(uint256)",
          "getFee()",
          "isOrderExists(uint256)",
          "stake(uint256,uint256,uint256)",
          "unstake()",
          "lastTimeRewardApplicable()",
          "rewardPerToken(address)",
          "earned(address)",
          "getReward()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "counterOrder",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "NFTMarketplaceV3",
              "src": "contracts/NFTMarketplace_V3.sol:25"
            },
            {
              "label": "listOrders",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(Order)19_storage)",
              "contract": "NFTMarketplaceV3",
              "src": "contracts/NFTMarketplace_V3.sol:26"
            },
            {
              "label": "treasury",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "NFTMarketplaceV3",
              "src": "contracts/NFTMarketplace_V3.sol:27"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "NFTMarketplaceV3",
              "src": "contracts/NFTMarketplace_V3.sol:28"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "NFTMarketplaceV3",
              "src": "contracts/NFTMarketplace_V3.sol:29"
            },
            {
              "label": "rewardPerTokenStored",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "NFTMarketplaceV3",
              "src": "contracts/NFTMarketplace_V3.sol:30"
            },
            {
              "label": "lastUpdateTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "NFTMarketplaceV3",
              "src": "contracts/NFTMarketplace_V3.sol:31"
            },
            {
              "label": "periodFinish",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "NFTMarketplaceV3",
              "src": "contracts/NFTMarketplace_V3.sol:32"
            },
            {
              "label": "rewards",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "NFTMarketplaceV3",
              "src": "contracts/NFTMarketplace_V3.sol:33"
            },
            {
              "label": "userRewardPerTokenPaid",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "NFTMarketplaceV3",
              "src": "contracts/NFTMarketplace_V3.sol:34"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Stake)28_storage)",
              "contract": "NFTMarketplaceV3",
              "src": "contracts/NFTMarketplace_V3.sol:36"
            },
            {
              "label": "stakingTime",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "NFTMarketplaceV3",
              "src": "contracts/NFTMarketplace_V3.sol:38"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "NFTMarketplaceV3",
              "src": "contracts/NFTMarketplace_V3.sol:39"
            },
            {
              "label": "countStaker",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "NFTMarketplaceV3",
              "src": "contracts/NFTMarketplace_V3.sol:40"
            },
            {
              "label": "parentNFT",
              "offset": 0,
              "slot": "14",
              "type": "t_contract(IERC721)790",
              "contract": "NFTMarketplaceV3",
              "src": "contracts/NFTMarketplace_V3.sol:41"
            },
            {
              "label": "rewardsToken",
              "offset": 0,
              "slot": "15",
              "type": "t_contract(IERC20)827",
              "contract": "NFTMarketplaceV3",
              "src": "contracts/NFTMarketplace_V3.sol:42"
            },
            {
              "label": "stakingToken",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IERC721)790",
              "contract": "NFTMarketplaceV3",
              "src": "contracts/NFTMarketplace_V3.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)827": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)790": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(Stake)28_storage)": {
              "label": "mapping(address => struct NFTMarketplaceV3.Stake)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Order)19_storage)": {
              "label": "mapping(uint256 => struct NFTMarketplaceV3.Order)",
              "numberOfBytes": "32"
            },
            "t_struct(Order)19_storage": {
              "label": "struct NFTMarketplaceV3.Order",
              "members": [
                {
                  "label": "seller",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "collection",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "nftsId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "isSold",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(Stake)28_storage": {
              "label": "struct NFTMarketplaceV3.Stake",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hashrate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMath": {
        "src": "openzeppelin-solidity/contracts/math/SafeMath.sol:8",
        "version": {
          "withMetadata": "cf4ec77023b2f14deae33f093bef68afb686e501b8d4299144ae184fb3467500",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "utils/inteface/inteface.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "allowance(address,address)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "utils/inteface/inteface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "ownerOf(uint256)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "c51f00cfc7f3554c4c5da7d8e67054f6e4380d4d8221fb79d07fa0d89a00b027",
          "withoutMetadata": "baf184fdaac973fe01b07c1866f8f87c2fe862d0be8ee8825f23609f52d6641e",
          "linkedWithoutMetadata": "baf184fdaac973fe01b07c1866f8f87c2fe862d0be8ee8825f23609f52d6641e"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "utils/inteface/inteface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "ownerOf(uint256)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721URIStorage": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:11",
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Strings"
        ],
        "methods": [
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "5887b46f5820e5d5ca239ea249bf3af82ad8c108ba8208b268cf53ce629695c6",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "utils/extensions/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "a3f4bd44a751e7f5ce26d949789cdff6a22e3bb5ea97d40a69c433c0ef0adb38",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "bbefaa3a96fe74b2fbdc9b9ef6d8b6b78358d9c3922cc66a570ff2d7fe94555c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "NFTFactory": {
        "src": "contracts/NFTFactory.sol:9",
        "version": {
          "withMetadata": "739ee6809500472a6e58e5554a9bbe7f49dedb8a1c3833aea98468ae25b44094",
          "withoutMetadata": "a8ec8a7184c171b85236bc3f8cbe3f41409f9b72dd90f58f93152fe6f9600416",
          "linkedWithoutMetadata": "a8ec8a7184c171b85236bc3f8cbe3f41409f9b72dd90f58f93152fe6f9600416"
        },
        "inherit": [
          "ERC721URIStorage",
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Counters"
        ],
        "methods": [
          "()",
          "mintNFT(address,string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "NFTFactory",
            "src": "contracts/NFTFactory.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_tokenURIs",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_string_storage)",
              "contract": "ERC721URIStorage",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:15"
            },
            {
              "label": "_tokenId",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(Counter)1477_storage",
              "contract": "NFTFactory",
              "src": "contracts/NFTFactory.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_string_storage)": {
              "label": "mapping(uint256 => string)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)1477_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NFTMarketplaceV1": {
        "src": "contracts/NFTMarketplace_V1.sol:6",
        "version": {
          "withMetadata": "653a1552f15536af4c1c153c0a481c7335fdf59b1c805dbfc66eb05d40ba9e3e",
          "withoutMetadata": "4237a51ffc3976b69974cd65da441316ac41998a182fc6891d245ae31f219e40",
          "linkedWithoutMetadata": "4237a51ffc3976b69974cd65da441316ac41998a182fc6891d245ae31f219e40"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getCounterOrder()",
          "createOrder(address,uint256,address,uint256)",
          "matchOrder(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "counterOrder",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "NFTMarketplaceV1",
              "src": "contracts/NFTMarketplace_V1.sol:15"
            },
            {
              "label": "listOrders",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(Order)1854_storage)",
              "contract": "NFTMarketplaceV1",
              "src": "contracts/NFTMarketplace_V1.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(Order)1854_storage)": {
              "label": "mapping(uint256 => struct NFTMarketplaceV1.Order)",
              "numberOfBytes": "32"
            },
            "t_struct(Order)1854_storage": {
              "label": "struct NFTMarketplaceV1.Order",
              "members": [
                {
                  "label": "seller",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "collection",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "nftsId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NFTMarketplaceV2": {
        "src": "contracts/NFTMarketplace_V2.sol:7",
        "version": {
          "withMetadata": "3b261b7dcde37886b6d63d57c986a6a3afd297a9a37f237161978940473880bb",
          "withoutMetadata": "9e6f6e659b81a101aef207b90d065e9c692d888db4e030a5b2ff112990f77447",
          "linkedWithoutMetadata": "9e6f6e659b81a101aef207b90d065e9c692d888db4e030a5b2ff112990f77447"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getCounterOrder()",
          "createOrder(address,uint256,address,uint256)",
          "matchOrder(uint256)",
          "addTreasury(address)",
          "getTreasury()",
          "setFee(uint256)",
          "getFee()",
          "isOrderExists(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "counterOrder",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "NFTMarketplaceV2",
              "src": "contracts/NFTMarketplace_V2.sol:16"
            },
            {
              "label": "listOrders",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(Order)2026_storage)",
              "contract": "NFTMarketplaceV2",
              "src": "contracts/NFTMarketplace_V2.sol:17"
            },
            {
              "label": "treasury",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "NFTMarketplaceV2",
              "src": "contracts/NFTMarketplace_V2.sol:18"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "NFTMarketplaceV2",
              "src": "contracts/NFTMarketplace_V2.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(Order)2026_storage)": {
              "label": "mapping(uint256 => struct NFTMarketplaceV2.Order)",
              "numberOfBytes": "32"
            },
            "t_struct(Order)2026_storage": {
              "label": "struct NFTMarketplaceV2.Order",
              "members": [
                {
                  "label": "seller",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "collection",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "nftsId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "NFTMarketplaceV3": {
        "src": "contracts/NFTMarketplace_V3.sol:7",
        "version": {
          "withMetadata": "53d1604b691d0f0df7ce731305f4532e296683248a6e886f998d1766af11e800",
          "withoutMetadata": "15b783f5a162f8190b93ff4b6b9d66f95f7d4c7f98dd1d6f65c2f383bdd7ef3c",
          "linkedWithoutMetadata": "15b783f5a162f8190b93ff4b6b9d66f95f7d4c7f98dd1d6f65c2f383bdd7ef3c"
        },
        "inherit": [],
        "libraries": [
          "SafeMath"
        ],
        "methods": [
          "initializer()",
          "getCounterOrder()",
          "createOrder(address,uint256,address,uint256)",
          "matchOrder(uint256)",
          "cancelOrder(uint256)",
          "addTreasury(address)",
          "getTreasury()",
          "setFee(uint256)",
          "getFee()",
          "isOrderExists(uint256)",
          "stake(uint256,uint256,uint256)",
          "unstake()",
          "lastTimeRewardApplicable()",
          "rewardPerToken(address)",
          "earned(address)",
          "getReward()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "counterOrder",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "NFTMarketplaceV3",
              "src": "contracts/NFTMarketplace_V3.sol:25"
            },
            {
              "label": "listOrders",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_uint256,t_struct(Order)2311_storage)",
              "contract": "NFTMarketplaceV3",
              "src": "contracts/NFTMarketplace_V3.sol:26"
            },
            {
              "label": "treasury",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "NFTMarketplaceV3",
              "src": "contracts/NFTMarketplace_V3.sol:27"
            },
            {
              "label": "fee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "NFTMarketplaceV3",
              "src": "contracts/NFTMarketplace_V3.sol:28"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "NFTMarketplaceV3",
              "src": "contracts/NFTMarketplace_V3.sol:29"
            },
            {
              "label": "rewardPerTokenStored",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "NFTMarketplaceV3",
              "src": "contracts/NFTMarketplace_V3.sol:30"
            },
            {
              "label": "lastUpdateTime",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "NFTMarketplaceV3",
              "src": "contracts/NFTMarketplace_V3.sol:31"
            },
            {
              "label": "periodFinish",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "NFTMarketplaceV3",
              "src": "contracts/NFTMarketplace_V3.sol:32"
            },
            {
              "label": "rewards",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "NFTMarketplaceV3",
              "src": "contracts/NFTMarketplace_V3.sol:33"
            },
            {
              "label": "userRewardPerTokenPaid",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "NFTMarketplaceV3",
              "src": "contracts/NFTMarketplace_V3.sol:34"
            },
            {
              "label": "stakes",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_struct(Stake)2320_storage)",
              "contract": "NFTMarketplaceV3",
              "src": "contracts/NFTMarketplace_V3.sol:36"
            },
            {
              "label": "stakingTime",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "NFTMarketplaceV3",
              "src": "contracts/NFTMarketplace_V3.sol:38"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "NFTMarketplaceV3",
              "src": "contracts/NFTMarketplace_V3.sol:39"
            },
            {
              "label": "countStaker",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "NFTMarketplaceV3",
              "src": "contracts/NFTMarketplace_V3.sol:40"
            },
            {
              "label": "parentNFT",
              "offset": 0,
              "slot": "14",
              "type": "t_contract(IERC721)3883",
              "contract": "NFTMarketplaceV3",
              "src": "contracts/NFTMarketplace_V3.sol:41"
            },
            {
              "label": "rewardsToken",
              "offset": 0,
              "slot": "15",
              "type": "t_contract(IERC20)3920",
              "contract": "NFTMarketplaceV3",
              "src": "contracts/NFTMarketplace_V3.sol:42"
            },
            {
              "label": "stakingToken",
              "offset": 0,
              "slot": "16",
              "type": "t_contract(IERC721)3883",
              "contract": "NFTMarketplaceV3",
              "src": "contracts/NFTMarketplace_V3.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)3920": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IERC721)3883": {
              "label": "contract IERC721",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(Stake)2320_storage)": {
              "label": "mapping(address => struct NFTMarketplaceV3.Stake)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Order)2311_storage)": {
              "label": "mapping(uint256 => struct NFTMarketplaceV3.Order)",
              "numberOfBytes": "32"
            },
            "t_struct(Order)2311_storage": {
              "label": "struct NFTMarketplaceV3.Order",
              "members": [
                {
                  "label": "seller",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "collection",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "nftsId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tokenAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "price",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "isSold",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(Stake)2320_storage": {
              "label": "struct NFTMarketplaceV3.Stake",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "hashrate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Token": {
        "src": "contracts/Token.sol:35",
        "version": {
          "withMetadata": "52f5d501276459dfb5601b730e619bd687fa58f4fcb6eaf7f63b29a229fc6a27",
          "withoutMetadata": "9d3108242d782d57dcbdb90a1c3bcfe5294036a2d57615025286d40aefdeba70",
          "linkedWithoutMetadata": "9d3108242d782d57dcbdb90a1c3bcfe5294036a2d57615025286d40aefdeba70"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "addToBlacklists(address)",
          "removeFromBlacklists(address)",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Token",
            "src": "contracts/Token.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Token",
              "src": "contracts/Token.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "Token",
              "src": "contracts/Token.sol:38"
            },
            {
              "label": "blacklists",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "Token",
              "src": "contracts/Token.sol:40"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Token",
              "src": "contracts/Token.sol:42"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "Token",
              "src": "contracts/Token.sol:44"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "Token",
              "src": "contracts/Token.sol:45"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "Token",
              "src": "contracts/Token.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMath": {
        "src": "openzeppelin-solidity/contracts/math/SafeMath.sol:8",
        "version": {
          "withMetadata": "cf4ec77023b2f14deae33f093bef68afb686e501b8d4299144ae184fb3467500",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "utils/inteface/inteface.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "allowance(address,address)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "utils/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    }
  ]
}